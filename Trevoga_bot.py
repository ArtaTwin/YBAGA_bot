from telebot   import TeleBot, types
from json      import load, dump
from datetime  import datetime
from threading import Thread
from time      import time

bot = TeleBot('5126680353:AAEBPAGPSNfb-_g-yxBdEd7Ku3vtdP0mbBM')
flag = True

def updater():
    import update_situation

Thread(target=updater, args=(), daemon=True).start()

del Thread, updater

def findl(list,element):
    return bool(list.count(element))

def timedelta(t):
    t = int(time())-t
    if t < 60:
        return " 1 —Ö–≤"
    if t < 3601:
        return f" {t//60} —Ö–≤"
    if t < 86400:
        return f" {t//3600} –≥–æ–¥"
    if t > 86399:
        return f" {t//172800} –¥"

def information(message):
    None
    if flag:
        bot.send_message(965712322, f"üìéüîµ\n{datetime.fromtimestamp(message.date).strftime('%d.%m.%Y %H:%M:%S')} :\n \n–ò–º—è:<pre>{message.from_user.first_name}</pre>\n–ü—Å–µ–≤–¥–æ–Ω–∏–º:<pre>{message.from_user.username}</pre>\nUser_id=<pre>{message.from_user.id}</pre>\nmessage_id={message.message_id}\nlast_name:<pre>{message.from_user.last_name}</pre>\n–¢–∏–ø —á–∞—Ç–∞:{message.chat.type}\nmess: {message.text}",parse_mode='html')
    #print(f"{datetime.fromtimestamp(message.date).strftime('%d.%m.%Y %H:%M:%S')} /: \n–ò–º—è:{message.from_user.first_name} |–ü—Å–µ–≤–¥–æ–Ω–∏–º:{message.from_user.username} |User_id={message.from_user.id} |message_id={message.message_id} |last_name:{message.from_user.last_name} |–¢–∏–ø —á–∞—Ç–∞:{message.chat.type} |mess: {message.text}\n")

@bot.message_handler(commands=['if'])
def InfoFile(message):
    if message.chat.id==965712322:
        s = set()
        for x in load(open('Info.json','rb')).values():
            for i in x:
                s.add(i)
        bot.send_message(965712322, int(len(s)))
        del s
        bot.send_document(965712322, open('Info.json','rb'))

@bot.message_handler(commands=['start','help'])
def start(message):
    information(message)
    bot.send_message(message.chat.id, "/info - –ù–∞–¥—Å–∏–ª–∞—é —Å–ø–∏—Å–æ–∫ –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é\n/map - –ù–∞–¥—Å–∏–ª–∞—é –º–∞–ø—É –£–∫—Ä–∞—ó–Ω–∏\n/form - –ù–∞–¥—Å–∏–ª–∞—é —Ñ–æ—Ä–º—É\n\n –Ω–µ –ø—Ä–∞—Ü—é—é —É –≥—Ä—É–ø–ø–∞—Ö",parse_mode='html')

@bot.message_handler(commands=['f'])
def f(message):
    if message.chat.id==965712322:
        global flag
        flag = flag == False
        bot.send_message(965712322,str(flag))

@bot.message_handler(commands=['info'])
def info(message):

    information(message)
    text = "–°–∏—Ç—É–∞—Ü—ñ—è –ø–æ –£–∫—Ä–∞—ó–Ω—ñ : \n"
    statistic = 0
    k = 0
    loaded = load(open('new_situation.json' , "rb"))
    for x in loaded["situation"]:
        k += 1
        if x["alarm"]:
            statistic+=100
            text += f" {k}. <b>{x['stateName']}</b> - üö®"
        else:
            text += f" {k}. {x['stateName']} - ‚úÖ"
        text += timedelta(x['data'])+"\n"
    if statistic==0:
        text += "\n<b>–¢—Ä–∏–≤–æ–≥–∏ –Ω–µ–º–∞—î ‚úÖ</b>"
    else:
        text += f"\n–ù–∞ {statistic//25}% —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó –£–∫—Ä–∞—ó–Ω–∏ –æ–≥–æ–ª–æ—à–µ–Ω–æ —Ç—Ä–∏–≤–æ–≥—É!"
    bot.send_message(message.chat.id, loaded["data"]+text,parse_mode='html')

@bot.message_handler(commands=['map'])
def map(message):

    information(message)
    text="–¢—Ä–∏–≤–æ–≥–∞ —É:\n"
    k = 0
    loaded = load(open('new_situation.json' , "rb"))
    for x in loaded["situation"]:
        if not x["alarm"]:
            continue
        k += 1
        text += f" {k}. {x['stateName']}\n"
    if k==0:
        text = "–¢—Ä–∏–≤–æ–≥–∏ –Ω–µ–º–∞—î ‚úÖ"

    bot.send_photo(message.chat.id, open("N.png", 'rb'),loaded["data"]+text)

@bot.message_handler(commands=['form'])
def k(message):
    global Info
    Info = load(open('Info.json' , "rb"))
    markup = types.InlineKeyboardMarkup()

    for stat in Info:
        if findl(Info[stat],message.from_user.id):
            markup.add(types.InlineKeyboardButton(stat+" ‚úÖ",callback_data="x"+stat))
        else:
            markup.add(types.InlineKeyboardButton(stat,callback_data=stat))

    markup.add(types.InlineKeyboardButton(" –ó–ê–ö–†–ò–¢–ò –ü–ï–†–ï–õ–Ü–ö ",callback_data="stop"))
    bot.send_message(message.chat.id, '–ù–∞–¥—Å–∏–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –∫–æ–ª–∏ —Ç—Ä–∏–≤–æ–≥–∞ –±—É–¥–µ —É:', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            global Info
            if call.data == 'stop':
                with open('Info.json', 'w') as f:
                    dump(Info, f)
                t = "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±—É–¥—É—Ç—å –Ω–∞–¥—Ö–æ–¥–∏—Ç–∏, –∫–æ–ª–∏ –∑–º—ñ–Ω—é–≤–∞—Ç–∏–º–µ—Ç—å—Å—è —Å–∏—Ç—É–∞—Ü—ñ—è —É: "
                for i in Info:
                    if findl(Info[i],call.from_user.id) :
                        t += "\n"+i
                if len(t) == 64:
                    t = "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –±—É–¥—É—Ç—å –Ω–∞–¥—Ö–æ–¥–∏—Ç–∏"
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=t, reply_markup=None)
                return
            elif call.data[0] == "x":
                Info[call.data[1::]].remove(call.from_user.id)
            else:
                Info[call.data].append(call.from_user.id)

            # remove inline buttons
            markup = types.InlineKeyboardMarkup()
            for stat in Info:
                if findl(Info[stat],call.from_user.id):
                    markup.add(types.InlineKeyboardButton(stat+" ‚úÖ",callback_data="x"+stat))
                else:
                    markup.add(types.InlineKeyboardButton(stat,callback_data=stat))

            markup.add(types.InlineKeyboardButton(" –ó–ê–ö–†–ò–¢–ò –ü–ï–†–ï–õ–Ü–ö ",callback_data="stop"))
            #call.message.from_user.id
            #call.message.chat.id

            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ù–∞–¥—Å–∏–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –∫–æ–ª–∏ —Ç—Ä–∏–≤–æ–≥–∞ –±—É–¥–µ —É:", reply_markup=markup)


    except Exception as e:

        print("\n", datetime.now().strftime("%x %X"), ">>> Maybe program was restarted. Error`s name is :\n", repr(e))
        bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="–í—ñ–¥–±—É–≤—Å—è –∑–±—ñ–π")
        bot.delete_message(call.message.chat.id, call.message.message_id)
        bot.send_message(call.message.chat.id, '–í—ñ–¥–±—É–≤—Å—è –∑–±—ñ–π.\n–ü–æ–≤—Ç–æ—Ä—ñ—Ç—å —Å–ø—Ä–æ–±—É, –±—É–¥—å –ª–∞—Å–∫–∞, –∑–Ω–æ–≤')

bot.polling(none_stop=True, interval = 1)
